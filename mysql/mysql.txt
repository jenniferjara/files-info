---------------------
** use basic mysql **
---------------------
# login 
	mysql -u root -p

# ver bases de datos
	show databases;

# usar una base de datos
	use wp_users_DB;

# ver tablas
	show tables;

# ver, crear tablas, etc
	sintaxis sql

---------------------
	
* create database <nombre>
* use <nombre>
* exit
* php 

--\ end

---------------------
** Import file.sql **
---------------------

* inject script

Terminal:
	mysql -u <username> -p <databasename> < <filename.sql>

Example:
	mysql -u root -p wp_users_DB < dump.sql


--\ end

* Login to your MYSQL console.
	mysql -u root -p

	use <name_of_your_database>;
	source <path_of_your_.sql_file>

Example:

	use wp_users_DB;
	source /var/www/project_a/dump.sql;


--\ end

------------------
** BackUp mysql **
------------------

mysqldump -u <username> -p <database_to_backup> > backup_name.sql
mysqldump -u root -p scotiabankDB > backup_name.sql

//  Restoring
1.- necesito crea una base de datos limpia
	mysql -u username -p
	CREATE DATABASE database_name;
	exit

2.- Importar el script
	mysql -u <username> -p <database_name> < backup_name.sql 


-----------
DataBases
-----------
*Crear una base de datos
	create database name_DB;

*crear tabla
	CREATE TABLE name_table (name VARCHAR(20), owner VARCHAR(20),
	species VARCHAR(20), sex CHAR(1), birth DATE, death DATE);

*borra DB
	drop database name_DB;

*describe el contenido de la tabla


-------
Table
-------

*añade una columna nueva
	ALTER TABLE table_name
    	ADD column_name tipo_dato <== nueva columna
    	AFTER column_name_ref; <== referencia de ubicacion

*cambia el nombre de una columna
    	ALTER TABLE table_name
    	change column_name <== tabla que cambia de nombre
    	new_column_name tipo_dato; <== nuevo nombre y tipo de dato

*borra una columna
    	ALTER TABLE table_name
    	DROP column_name; <== borra de la columna

*modifica propiedades de una columna
	ALTER TABLE table_name 
	MODIFY column_name varchar(25) NOT NULL; <== modificar tipo y valor de null

*insertar datos en una tabla
	INSERT INTO table_name
	VALUES (value1, value2, value3, ...);

	INSERT INTO table_name (column1, column2, column3, ...)
	VALUES (value1, value2, value3, ...);
	
	(Insertar varios datos en una columna)
	insert into table_name(column_name) values ('value1'), ('value2'), ('value3');

*renombrar el nombre de una tabla
	ALTER TABLE table_name
	RENAME TO new_table_name;

*contar datos
	select count(*) from table_name <== cuenta los elem selecionados en una tabla
	where column_name = dato <== referencia del conteo

*modificar / cambiar
	alter table table_name change old_column_name new_column_name tipo_dato
	
*crea una tabla y almacena datos en base a una consulta
	CREATE TABLE table_name AS SELECT expressions FROM existing_tables WHERE conditions;

*actulizar un dato con referencia a una celda
	 UPDATE table_name SET column_set = some_data where column_ref = 'example_data';

*actulizar datos con relaciona datos de otra tabla
	 UPDATE table_name_act
	 SET column_set = 
	 (select column_ref 
	 from table_ref 
	 WHERE condition_ref = some_data) 
	 WHERE condition_table_act = 'some_data';

---------------
BUSQUEDAS, FITROS
---------------

*filtra todos los datos de una columna
        select column_name or * (selecciona todos los datos) from table_name;

*filtra segun dato específico de una columna
        select * from table_name where condiciones;
        (si hay espacios entre las palabras)
        select * from claves_options where `Pregunta 3` = 'Playa';

*cuenta segun el dato una columna de la tabla
	select coumn_name, count(*) from table_name group by column_name;

*muestra una busqueda segun la cantidad de filas 
	SELECT column_name FROM table_name 
	LIMIT #; <== cantidad de filas que muestra el filtro

*muestra la consulta sin filas duplicadas
	SELECT DISTINCT column_name from table_name;
	(se puede añadir condicionales)

*crear table a partir de una consulta de una funcion
	create table new_table_name AS select column_name, function(param) from table_name order by column_name;
	(nuevos nombres de las columnas de la tabla nueva con alias)
	create table new_table_name AS select column_name AS alias_name, function(param) AS alias_name from table_name order by column_name;


----------------
Storage Engine
----------------
*Mostrar que storage engine soportan tu serve
	SHOW ENGINES (tabla simple)
	SHOW ENGINES\G (tabla descriptiva)
	
*Muestra el estado de INNODB
	SHOW ENGINE INNODB STATUS 


----------------
FUNCIONES
----------------
*retorna la fecha actual
	NOW();

*retorna fecha del servidor
	SYSDATE();

*muestra todas las funciones
	show * from mysql.func;
	show function status;
